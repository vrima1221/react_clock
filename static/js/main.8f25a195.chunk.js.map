{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toUTCString","slice","timerIdClockTime","this","window","setInterval","setState","console","info","prevProps","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","timerIdClockName","showClock","hideClock","event","preventDefault","document","addEventListener","removeEventListener","Box","sx","width","height","backgroundColor","border","p","my","mx","ReactDOM","render","getElementById"],"mappings":"2OAUaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAAQC,cAAcC,OAAO,IAAK,IAFjD,EAKEC,iBAAmB,EALrB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,iBAAmBE,OAAOC,aAAY,WACzC,EAAKC,SAAS,CAAER,MAAO,IAAIC,MAAQC,cAAcC,OAAO,IAAK,KAE7DM,QAAQC,KAAK,EAAKX,MAAMC,QACvB,OAZP,gCAeE,SAAmBW,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCH,QAAQK,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDP,KAAKQ,MAAMD,SAlBpE,kCAsBE,WACEN,OAAOS,cAAcV,KAAKD,oBAvB9B,oBA0BE,WACE,IAAQQ,EAASP,KAAKQ,MAAdD,KACAZ,EAASK,KAAKN,MAAdC,KAER,OACE,mCACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,aAxCb,GAA2BiB,aCJ3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWlB,OAAO,GAE3C,MAAM,SAAN,OAAgBgB,GAQX,IAAMG,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVC,UAAW,WAHf,EAMEC,iBAAmB,EANrB,EAwBEC,UAAY,WACV,EAAKlB,SAAS,CAAEe,UAAU,KAzB9B,EA4BEI,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKrB,SAAS,CAAEe,UAAU,KA9B9B,uDAQE,WAAqB,IAAD,OAClBO,SAASC,iBAAiB,cAAe1B,KAAKsB,WAC9CG,SAASC,iBAAiB,QAAS1B,KAAKqB,WAExCrB,KAAKoB,iBAAmBnB,OAAOC,aAAY,WACzC,EAAKC,SAAS,CAAEgB,UAAWN,QAC1B,QAdP,kCAiBE,WACEY,SAASE,oBAAoB,cAAe3B,KAAKsB,WACjDG,SAASE,oBAAoB,QAAS3B,KAAKqB,WAE3CpB,OAAOS,cAAcV,KAAKoB,oBArB9B,oBAiCE,WACE,OACE,cAACQ,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,IACPC,OAAQ,IACRC,gBAAiB,gBACjBC,OAAQ,uBALZ,SAQE,sBAAKtB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBACA,qBAAKA,UAAU,aAAf,SACGX,KAAKN,MAAMwB,UACV,cAAC,EAAD,CAAOX,KAAMP,KAAKN,MAAMyB,cAG5B,cAAC,IAAD,CACEU,GAAI,CACFK,EAAG,EACHC,GAAI,EACJC,GAAI,mBAtDlB,GAAyBxB,aCdzByB,IAASC,OACP,cAAC,EAAD,IACAb,SAASc,eAAe,W","file":"static/js/main.8f25a195.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  time: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    time: (new Date()).toUTCString().slice(-12, -4),\n  };\n\n  timerIdClockTime = 0;\n\n  componentDidMount() {\n    this.timerIdClockTime = window.setInterval(() => {\n      this.setState({ time: (new Date()).toUTCString().slice(-12, -4) });\n      // eslint-disable-next-line no-console\n      console.info(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerIdClockTime);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <>\n        <div className=\"Clock\">\n          <strong className=\"Clock__name\">\n            {name}\n          </strong>\n\n          {' time is '}\n\n          <span className=\"Clock__time\">\n            {time}\n          </span>\n        </div>\n      </>\n    );\n  }\n}\n","import { Component } from 'react';\nimport Box from '@mui/material/Box';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerIdClockName = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n\n    this.timerIdClockName = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n\n    window.clearInterval(this.timerIdClockName);\n  }\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    return (\n      <Box\n        sx={{\n          width: 300,\n          height: 300,\n          backgroundColor: 'primary.light',\n          border: '5px solid lightblue',\n        }}\n      >\n        <div className=\"App\">\n          <h1 className=\"App__title\">React clock</h1>\n          <div className=\"App__clock\">\n            {this.state.hasClock && (\n              <Clock name={this.state.clockName} />\n            )}\n          </div>\n          <AccessTimeIcon\n            sx={{\n              p: 2,\n              my: 0,\n              mx: 'auto',\n            }}\n          />\n        </div>\n      </Box>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}